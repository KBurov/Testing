<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:CommandBehaviors="clr-namespace:AttachedCommandBehavior;assembly=AttachedCommandBehavior"
                    xmlns:Converters="clr-namespace:Testing.Common.Converters;assembly=Testing.Common">
    <Converters:ImageCacheConverter x:Key="ImageCacheConverter" />
    <!-- Colors & Brushes -->
    <Color x:Key="FocusEffectColor">SkyBlue</Color>
    
    <SolidColorBrush x:Key="BackgroundBrush" Color="#F2FAFE" />
    <SolidColorBrush x:Key="BorderBrush" Color="#EDF5F9" />
    <SolidColorBrush x:Key="ForegroundBrush" Color="#1C94D2" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#F2FAFE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#EDF5F9" />
    <SolidColorBrush x:Key="DisabledButtonBackgroundBrush" Color="{StaticResource FocusEffectColor}" />
    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#1C94D2" />
    <SolidColorBrush x:Key="ErrorBrush" Color="Red" />

    <SolidColorBrush x:Key="ScrollBarLineButtonArrowDisabledFillBrush" Color="#FF808090"/>
    <SolidColorBrush x:Key="ScrollBarLineButtonDisabledBackgroundBrush" Color="#FFC0C0D0"/>
    <SolidColorBrush x:Key="ScrollBarLineButtonDisabledBorderBrush" Color="#FF808090"/>
    <!-- Main Window Style -->
    <Style x:Key="MainWindowStyle">
        <Setter Property="FrameworkElement.Height" Value="540" />
        <Setter Property="FrameworkElement.Width" Value="950" />
        <Setter Property="Window.Icon" Value="../Base/Icons/app.ico" />
        <Setter Property="Window.WindowStyle" Value="None" />
        <Setter Property="NavigationWindow.ShowsNavigationUI" Value="False" />
    </Style>
    <!-- Images -->
    <!-- Splash Screen Style -->
    <Style x:Key="SplashScreenStyle">
        <Setter Property="Image.Source" Value="../Base/Images/splashScreen.jpg" />
        <Setter Property="Image.Stretch" Value="Fill" />
    </Style>
    <!-- Administration Splash Screen Style -->
    <Style x:Key="AdministrationSplashScreenStyle">
        <Setter Property="Image.Source" Value="../Base/Images/administrationSplashScreen.jpg" />
        <Setter Property="Image.Stretch" Value="Fill" />
    </Style>
    <!-- Logo Image Style -->
    <Style x:Key="LogoImageStyle">
        <Setter Property="FrameworkElement.Height" Value="81" />
        <Setter Property="FrameworkElement.Width" Value="76" />
        <Setter Property="FrameworkElement.Margin" Value="45,15,0,0" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Top" />
        <Setter Property="Image.Source" Value="../Base/Images/logo.png" />
        <Setter Property="Image.Stretch" Value="Fill" />
    </Style>
    <!-- Bottom Background Image Style -->
    <Style x:Key="BottomBackgroundImageStyle">
        <Setter Property="FrameworkElement.Height" Value="45" />
        <Setter Property="FrameworkElement.Width" Value="1827" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="Image.Source" Value="../Base/Images/bottom.png" />
        <Setter Property="Image.Stretch" Value="Fill" />
    </Style>
    <!-- Selected Image Style -->
    <Style x:Key="SelectedImageStyle">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
        <Setter Property="FrameworkElement.Margin" Value="0" />
        <Setter Property="Image.Stretch" Value="Uniform" />
    </Style>
    <!-- User Attribute Pointer Image Style -->
    <Style x:Key="UserAttributePointerImageStyle">
        <Setter Property="FrameworkElement.Height" Value="18" />
        <Setter Property="FrameworkElement.Width" Value="38" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.Margin" Value="0,0,25,0" />
        <Setter Property="Image.Source" Value="../Base/Images/userAttributePointer.jpg" />
    </Style>
    <!-- User Attribute Delimiter Image Style -->
    <Style x:Key="UserAttributeDelimiterImageStyle">
        <Setter Property="FrameworkElement.Height" Value="12" />
        <Setter Property="FrameworkElement.Width" Value="10" />
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.Margin" Value="20,0,20,0" />
        <Setter Property="Image.Source" Value="../Base/Images/userAttributeDelimiter.jpg" />
    </Style>
    <!-- Date Pointer Image Style -->
    <Style x:Key="DatePointerImageStyle">
        <Setter Property="FrameworkElement.Height" Value="7" />
        <Setter Property="FrameworkElement.Width" Value="8" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.Margin" Value="5,0,5,0" />
        <Setter Property="Image.Source" Value="../Base/Images/datePointer.jpg" />
    </Style>
    <!-- Timer Pointer Image Style -->
    <Style x:Key="TimerPointerImageStyle">
        <Setter Property="FrameworkElement.Height" Value="23" />
        <Setter Property="FrameworkElement.Width" Value="23" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.Margin" Value="0,0,10,0" />
        <Setter Property="Image.Source" Value="../Base/Images/clock.png" />
    </Style>
    <!-- Time Over Image Style -->
    <Style x:Key="TimeOverImageStyle">
        <Setter Property="FrameworkElement.Height" Value="135" />
        <Setter Property="FrameworkElement.Width" Value="106" />
        <Setter Property="Image.Source" Value="../Base/Images/bigClock.png" />
    </Style>
    <!-- Labels -->
    <!-- Label Style -->
    <Style x:Key="LabelStyle">
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.Margin" Value="0" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.FontFamily" Value="Arial" />
        <Setter Property="Control.FontSize" Value="16" />
    </Style>
    <!-- Date Label Style -->
    <Style x:Key="DateLabelStyle" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="Control.FontSize" Value="14" />
    </Style>
    <!-- Error Label Style -->
    <Style x:Key="ErrorLabelStyle" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
        <Setter Property="Control.Foreground" Value="{StaticResource ErrorBrush}" />
        <Setter Property="Control.FontSize" Value="12" />
    </Style>
    <!-- Title Style -->
    <Style x:Key="TitleStyle" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center" />
        <Setter Property="FrameworkElement.Margin" Value="0,15,0,15" />
        <Setter Property="Control.FontSize" Value="20" />
    </Style>
    <!-- Page Title Style -->
    <Style x:Key="PageTitleStyle" BasedOn="{StaticResource TitleStyle}">
        <Setter Property="FrameworkElement.Margin" Value="0,55,0,0" />
        <Setter Property="Control.FontSize" Value="30" />
    </Style>
    <!-- Time Over Title Style -->
    <Style x:Key="TimeOverTitleStyle" BasedOn="{StaticResource TitleStyle}">
        <Setter Property="FrameworkElement.Margin" Value="20,35,0,0" />
        <Setter Property="Control.FontSize" Value="36" />
        <Setter Property="Control.FontWeight" Value="Bold" />
    </Style>
    <!-- Small Title Style -->
    <Style x:Key="SmallTitleStyle" BasedOn="{StaticResource LabelStyle}">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left" />
        <Setter Property="FrameworkElement.Margin" Value="0,15,0,10" />
        <Setter Property="Control.FontSize" Value="18" />
    </Style>
    <!-- Panels -->
    <!-- Top Background Panel Style -->
    <Style x:Key="TopBackgroundPanelStyle">
        <Setter Property="FrameworkElement.Height" Value="90" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Top" />
        <Setter Property="Control.Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#C7EAFD" Offset="0" />
                    <GradientStop Color="White" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Bottom Background Panel Style -->
    <Style x:Key="BottomBackgroundPanelStyle">
        <Setter Property="FrameworkElement.Height" Value="45" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
        <Setter Property="Control.Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="White" Offset="0" />
                    <GradientStop Color="#C7EAFD" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Horizontal Right StackPanel Style -->
    <Style x:Key="HorizontalRightStackPanelStyle">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right" />
        <Setter Property="StackPanel.Orientation" Value="Horizontal" />
    </Style>
    <!-- Timer StackPanel Style -->
    <Style x:Key="TimerStackPanelStyle" BasedOn="{StaticResource HorizontalRightStackPanelStyle}">
        <Setter Property="FrameworkElement.Margin" Value="0,0,0,15" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
    </Style>
    <!-- Set Buttons Panel Style -->
    <Style x:Key="SetButtonsPanelStyle" BasedOn="{StaticResource HorizontalRightStackPanelStyle}">
        <Setter Property="FrameworkElement.Margin" Value="0,20,15,0" />
    </Style>
    <!-- Window Buttons Panel Style -->
    <Style x:Key="WindowButtonsPanelStyle" BasedOn="{StaticResource HorizontalRightStackPanelStyle}">
        <Setter Property="FrameworkElement.Margin" Value="0,0,10,0" />
    </Style>
    <!-- Bottom Panel Style -->
    <Style x:Key="BottomPanelStyle">
        <Setter Property="FrameworkElement.Height" Value="90" />
        <Setter Property="FrameworkElement.Margin" Value="65,10,65,0" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Bottom" />
    </Style>
    <!-- Settings Panel Style -->
    <Style x:Key="SettingsPanelStyle">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
        <Setter Property="FrameworkElement.Margin" Value="65,20,65,0" />
    </Style>
    <!-- User Form Panel Style -->
    <Style x:Key="UserFormPanelStyle">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
        <Setter Property="FrameworkElement.Margin" Value="0,30,65,0" />
    </Style>
    <!-- User Attribute Panel Style -->
    <Style x:Key="UserAttributePanelStyle">
        <Setter Property="FrameworkElement.Margin" Value="0,10,0,0" />
    </Style>
    <!-- Issue Panel Style -->
    <Style x:Key="IssuePanelStyle">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch" />
        <Setter Property="FrameworkElement.Margin" Value="65,35,65,0" />
    </Style>
    <!-- Shelve Panel Style -->
    <Style x:Key="ShelvePanelStyle">
        <Setter Property="FrameworkElement.MinHeight" Value="60" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
    </Style>
    <!-- Selectable Shelve Panel Style -->
    <Style x:Key="SelectableShelvePanelStyle" BasedOn="{StaticResource ShelvePanelStyle}">
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver" Value="True">
                <Setter Property="Control.BorderBrush" Value="{StaticResource ErrorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Buttons -->
    <!-- Window Button Style -->
    <Style x:Key="WindowButtonStyle">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.Margin" Value="0,15,5,0" />
        <Setter Property="FrameworkElement.Height" Value="18" />
        <Setter Property="FrameworkElement.Width" Value="18" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Top" />
        <Setter Property="Control.FontFamily" Value="Arial" />
        <Setter Property="Control.FontSize" Value="12" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path x:Name="Border"
                              Stretch="Fill"
                              Stroke="{TemplateBinding BorderBrush}"
                              StrokeThickness="1"
                              Fill="{TemplateBinding Background}"
                              Data="M 0 0 L 0 20 H 20 L 20 0 Z" />
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="StrokeThickness" Value="2" />
                            <Setter Property="Background" Value="{StaticResource DisabledButtonBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Button Style -->
    <Style x:Key="ButtonStyle">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.Margin" Value="0" />
        <Setter Property="FrameworkElement.Height" Value="20" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.FontFamily" Value="Arial" />
        <Setter Property="Control.FontSize" Value="13" />
        <Setter Property="Control.Padding" Value="0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path x:Name="Border"
                              Stretch="Fill"
                              Stroke="{TemplateBinding BorderBrush}"
                              StrokeThickness="1"
                              Fill="{TemplateBinding Background}"
                              Data="M 0 0 L 10 15 L 0 30 H 120 L 130 15 L 120 0 Z" />
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="StrokeThickness" Value="2" />
                            <Setter Property="Background" Value="{StaticResource DisabledButtonBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Set Button Style -->
    <Style x:Key="SetButtonStyle" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="FrameworkElement.Height" Value="35" />
        <Setter Property="FrameworkElement.Width" Value="90" />
        <Setter Property="Control.FontSize" Value="16" />
    </Style>
    <!-- Bottom Button Style -->
    <Style x:Key="BottomButtonStyle" BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="FrameworkElement.Margin" Value="0,0,0,70" />
    </Style>
    <!-- Short Bottom Button Style -->
    <Style x:Key="ShortBottomButtonStyle" BasedOn="{StaticResource BottomButtonStyle}">
        <Setter Property="FrameworkElement.Width" Value="100" />
    </Style>
    <!-- Create Button Style -->
    <Style x:Key="CreateButtonStyle">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.Margin" Value="0,0,0,70" />
        <Setter Property="FrameworkElement.Height" Value="20" />
        <Setter Property="FrameworkElement.Width" Value="100" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.FontFamily" Value="Arial" />
        <Setter Property="Control.FontSize" Value="13" />
        <Setter Property="Control.Padding" Value="0,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Path x:Name="Border"
                              Stretch="Fill"
                              Stroke="{TemplateBinding BorderBrush}"
                              StrokeThickness="1"
                              Fill="{TemplateBinding Background}"
                              Data="M 0 0 L 10 15 L 0 30 H 120 L 130 15 L 120 0 Z" />
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="StrokeThickness" Value="2" />
                            <Setter Property="Background" Value="{StaticResource DisabledButtonBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Up Down Button Style -->
    <Style x:Key="UpDownButtonStyle">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.Margin" Value="5,15,0,0" />
        <Setter Property="FrameworkElement.Height" Value="20" />
        <Setter Property="FrameworkElement.Width" Value="80" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Top" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.Background" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.FontFamily" Value="Arial" />
        <Setter Property="Control.FontSize" Value="13" />
        <Setter Property="Control.Padding" Value="0,0,0,0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Path x:Name="Border"
                              Stretch="Fill"
                              Stroke="{TemplateBinding BorderBrush}"
                              StrokeThickness="1"
                              Fill="{TemplateBinding Background}"
                              Data="M 0 0 L 0 20 H 20 L 20 0 Z" />
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="StrokeThickness" Value="1" />
                            <Setter Property="Background" Value="{StaticResource DisabledButtonBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- RadioButton Style -->
    <Style x:Key="RadioButtonStyle">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.Margin" Value="0,0,10,0" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
    </Style>
    <!-- TextBoxes -->
    <ControlTemplate x:Key="TextBoxErrorTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <Ellipse Grid.Row="0" Grid.Column="0" Margin="2,0" Width="5" Height="5"
                     VerticalAlignment="Center" Fill="{StaticResource ErrorBrush}"
                     ToolTip="{Binding ElementName=CustomAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
            <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Margin="2"
                       Foreground="{StaticResource ErrorBrush}" HorizontalAlignment="Right"
                       Text="{Binding ElementName=CustomAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
            <Border Grid.Row="0" Grid.Column="1" BorderBrush="{StaticResource ErrorBrush}" BorderThickness="1" CornerRadius="8">
                <AdornedElementPlaceholder Name="CustomAdorner"/>
            </Border>
        </Grid>
    </ControlTemplate>
    <!-- TextBox Style -->
    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxErrorTemplate}"/>
        <Setter Property="Control.FontFamily" Value="Arial" />
        <Setter Property="Control.FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Name="Border" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="8" />
                        <ScrollViewer Margin="5,2,5,2" x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource FocusEffectColor}" BlurRadius="8" Opacity="1" ShadowDepth="0" Direction="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self},  Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Issue Content TextBox Style -->
    <Style x:Key="IssueContentTextBoxStyle" BasedOn="{StaticResource TextBoxStyle}" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="50" />
        <Setter Property="MaxLength" Value="500" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <!-- CheckBox Style -->
    <Style x:Key="CheckBoxStyle">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.Margin" Value="0,0,10,0" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center" />
        <Setter Property="Control.BorderBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="Control.BorderThickness" Value="1" />
    </Style>
    <!-- ComboBox Template & Style Definition -->
    <Style x:Key="ComboBoxButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Name="Border" Margin="1" CornerRadius="0" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="0">
                        <Path HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{StaticResource ForegroundBrush}" Data="M 0 0 L 4 4 L 8 0 Z" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ScrollBarLineButtonArrowDisabledFillBrush}"/>
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollBarLineButtonDisabledBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ScrollBarLineButtonDisabledBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Control.FontFamily" Value="Arial" />
        <Setter Property="Control.FontSize" Value="14" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid x:Name="grid">
                        <Border x:Name="Border" Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="8" />
                        <ContentPresenter x:Name="ContentSite"
                                          HorizontalAlignment="Stretch"
                                          Margin="7,2,21,2"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False"/>
                        <DockPanel>
                            <ToggleButton x:Name="ToggleButton"
                                          DockPanel.Dock="Right"
                                          Margin="1"
                                          ClickMode="Press"
                                          Focusable="false"
                                          HorizontalAlignment="Right"
                                          Width="20"
                                          Style="{StaticResource ComboBoxButton}"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DockPanel>

                        <Popup x:Name="Popup"
                               Focusable="False"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="Fade"
                               VerticalOffset="4">
                            <Border Background="{StaticResource BackgroundBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1">
                                <Grid x:Name="DropDown" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" SnapsToDevicePixels="True">
                                    <ScrollViewer Margin="1" CanContentScroll="True" HorizontalScrollBarVisibility="Auto" SnapsToDevicePixels="True" VerticalScrollBarVisibility="Auto">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect Color="{StaticResource FocusEffectColor}" BlurRadius="8" Opacity="1" ShadowDepth="0" Direction="0" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            <Setter TargetName="ToggleButton" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                            <Setter TargetName="ToggleButton" Property="Background" Value="{StaticResource BackgroundBrush}"/>
                            <Setter TargetName="ToggleButton" Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                            <Setter TargetName="ToggleButton" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ListView Style -->
    <Style x:Key="ListViewStyle">
        <Setter Property="FrameworkElement.Margin" Value="0" />
        <Setter Property="Control.BorderThickness" Value="0" />
        <Setter Property="ListView.SelectionMode" Value="Single" />
    </Style>
    <!-- Answer ListView Style -->
    <Style x:Key="AnswerListViewStyle" BasedOn="{StaticResource ListViewStyle}">
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="1" Rows="5" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Order Answer ListView Style -->
    <Style x:Key="OrderAnswerListViewStyle" BasedOn="{StaticResource ListViewStyle}">
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="1" Rows="10" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Checkable Image Answer ListView Style -->
    <Style x:Key="CheckableImageAnswerListViewStyle" BasedOn="{StaticResource ListViewStyle}">
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="30" Rows="1" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Placement Image ListView Style -->
    <Style x:Key="PlacementImageListViewStyle" BasedOn="{StaticResource ListViewStyle}">
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="10" Rows="3" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Placement Correct Answer ListView Style -->
    <Style x:Key="PlacementCorrectAnswerListViewStyle" BasedOn="{StaticResource ListViewStyle}">
        <Setter Property="ItemsControl.ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding PlacesOnShelf}" Rows="1" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Placement Image Style -->
    <Style x:Key="PlacementImageStyle">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.Margin" Value="0,2,0,2" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Bd" BorderBrush="Transparent" BorderThickness="1" Margin="0,1,0,1" SnapsToDevicePixels="True">
                        <Image VerticalAlignment="Bottom" Stretch="Uniform" Source="{Binding Path=ImageFileName, Converter={StaticResource ImageCacheConverter}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ErrorBrush}" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Placement Correct Answer Style -->
    <Style x:Key="PlacementCorrectAnswerStyle">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FrameworkElement.Margin" Value="0,2,0,2" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Name="Bd" BorderBrush="Transparent" BorderThickness="1" Margin="0,1,0,1" SnapsToDevicePixels="True">
                        <Image VerticalAlignment="Bottom" Stretch="Uniform" Source="{Binding Path=., Converter={StaticResource ImageCacheConverter}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{DynamicResource ErrorBrush}" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CommandBehaviors:CommandBehavior.Event" Value="MouseDoubleClick" />
        <Setter Property="CommandBehaviors:CommandBehavior.Command" Value="{Binding DataContext.DeletePlacementCorrectAnswerCommand, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
        <Setter Property="CommandBehaviors:CommandBehavior.CommandParameter" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListView}}}" />
    </Style>
</ResourceDictionary>