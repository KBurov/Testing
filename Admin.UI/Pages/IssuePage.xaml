<Page x:Class="Testing.Admin.UI.Pages.IssuePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:Behaviors="clr-namespace:Wanderer.Library.Wpf.Behaviors;assembly=Wanderer.Library.Wpf"
      xmlns:Common="clr-namespace:Testing.Common;assembly=Testing.Common"
      xmlns:Controls="clr-namespace:Wanderer.Library.Wpf.Controls;assembly=Wanderer.Library.Wpf" 
      xmlns:Converters="clr-namespace:Testing.Common.Converters;assembly=Testing.Common"
      xmlns:Wpf="clr-namespace:Wanderer.Library.Wpf.Markup;assembly=Wanderer.Library.Wpf"
      xmlns:Local="clr-namespace:Testing.Admin.UI.Controls"
      mc:Ignorable="d" 
      d:DesignHeight="300" d:DesignWidth="300">
    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <Converters:SetButtonParametersConverter x:Key="SetButtonParametersConverter" />
        <Converters:UInt32ToStringConverter x:Key="UInt32ToStringConverter" />
        
        <DataTemplate x:Key="SelectionIssueTemplate">
            <Local:SelectionIssue />
        </DataTemplate>
        <DataTemplate x:Key="SelectionInImageIssueTemplate">
            <Local:SelectionInImageIssue />
        </DataTemplate>
        <DataTemplate x:Key="SelectionInImageIssueAdditionalTemplate">
            <Local:SelectionInImageIssueAdditional />
        </DataTemplate>
        <DataTemplate x:Key="ImageSelectionIssueTemplate">
            <Local:ImageSelectionIssue />
        </DataTemplate>
        <DataTemplate x:Key="OrderIssueTemplate">
            <Local:OrderIssue />
        </DataTemplate>
        <DataTemplate x:Key="PlacementIssueTemplate">
            <Local:PlacementIssue />
        </DataTemplate>
        <DataTemplate x:Key="PlacementIssueAdditionalTemplate">
            <Local:PlacementIssueAdditional />
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- Background -->
        <Grid Style="{DynamicResource TopBackgroundPanelStyle}" />
        <Image Style="{DynamicResource LogoImageStyle}" />
        <Grid Grid.Row="3" Style="{DynamicResource BottomBackgroundPanelStyle}" />
        <Image Grid.Row="3" Style="{DynamicResource BottomBackgroundImageStyle}" />

        <Grid Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <!-- Set buttons -->
                <StackPanel Style="{DynamicResource SetButtonsPanelStyle}">
                    <Button Style="{DynamicResource SetButtonStyle}" Content="{DynamicResource Set1ButtonTitle}" IsEnabled="{Binding IsSet1ButtonEnabled}" Command="{Binding SetCommand}" Tag="0">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource SetButtonParametersConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Page}}" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <Button Style="{DynamicResource SetButtonStyle}" Content="{DynamicResource Set2ButtonTitle}" IsEnabled="{Binding IsSet2ButtonEnabled}" Command="{Binding SetCommand}" Tag="1">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource SetButtonParametersConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Page}}" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <Button Style="{DynamicResource SetButtonStyle}" Content="{DynamicResource Set3ButtonTitle}" IsEnabled="{Binding IsSet3ButtonEnabled}" Command="{Binding SetCommand}" Tag="2">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource SetButtonParametersConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Page}}" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <Button Style="{DynamicResource SetButtonStyle}" Content="{DynamicResource Set4ButtonTitle}" IsEnabled="{Binding IsSet4ButtonEnabled}" Command="{Binding SetCommand}" Tag="3">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource SetButtonParametersConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Page}}" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <Button Style="{DynamicResource SetButtonStyle}" Content="{DynamicResource Set5ButtonTitle}" IsEnabled="{Binding IsSet5ButtonEnabled}" Command="{Binding SetCommand}" Tag="4">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource SetButtonParametersConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Page}}" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <Button Style="{DynamicResource SetButtonStyle}" Content="{DynamicResource Set6ButtonTitle}" IsEnabled="{Binding IsSet6ButtonEnabled}" Command="{Binding SetCommand}" Tag="5">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource SetButtonParametersConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Page}}" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <Button Style="{DynamicResource SetButtonStyle}" Content="{DynamicResource Set7ButtonTitle}" IsEnabled="{Binding IsSet7ButtonEnabled}" Command="{Binding SetCommand}" Tag="6">
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource SetButtonParametersConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Page}}" />
                                <Binding Path="Tag" RelativeSource="{RelativeSource Self}" />
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                </StackPanel>
                <!-- Window buttons -->
                <StackPanel Grid.Column="1" Style="{DynamicResource WindowButtonsPanelStyle}">
                    <Button Style="{DynamicResource WindowButtonStyle}" Content="_" Click="MinimizeButtonClick" />
                    <Button Style="{DynamicResource WindowButtonStyle}" Content=" " Click="MaximizeRestoreButtonClick" />
                    <Button Style="{DynamicResource WindowButtonStyle}" Content="x" Click="CloseButtonClick" />
                </StackPanel>
            </Grid>
            <!-- Issue -->
            <Grid Grid.Row="1" Style="{DynamicResource IssuePanelStyle}" Visibility="{Binding IsIssueSelected, Converter={StaticResource BoolToVisibilityConverter}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!-- Issue Number, Language and Error -->
                <DockPanel Grid.ColumnSpan="{Binding DetailsColumnSpan}">
                    <StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
                        <Label Style="{DynamicResource SmallTitleStyle}" Content="{DynamicResource IssueContentTitle}" />
                        <!-- Issue Language -->
                        <Label Style="{DynamicResource LabelStyle}" Content=" ( " />
                        <ComboBox ItemsSource="{Binding Source={Wpf:Enumeration {x:Type Common:InterfaceLanguages}}}" DisplayMemberPath="Description" SelectedValuePath="Value"
                                  SelectedValue="{Binding IssueLanguage}"
                                  Height="20" Width="120" />
                        <Label Style="{DynamicResource LabelStyle}" Content=" )" />
                    </StackPanel>
                    <Label DockPanel.Dock="Right" Style="{DynamicResource ErrorLabelStyle}" Visibility="{Binding IsIssueContentError, Converter={StaticResource BoolToVisibilityConverter}}" Content="{DynamicResource ErrorIssueContentTitle}" />
                </DockPanel>
                <!-- Issue Content -->
                <Grid Grid.ColumnSpan="{Binding DetailsColumnSpan}" Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Label Style="{DynamicResource LabelStyle}" Content="{Binding DisplayedIssueNumber}" />
                    <TextBox Grid.Column="1" Style="{DynamicResource IssueContentTextBoxStyle}" Text="{Binding IssueContent, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
                <!-- Issue details -->
                <ContentControl Grid.ColumnSpan="{Binding DetailsColumnSpan}" Grid.Row="2" Content="{Binding}" Focusable="False">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IssueType}" Value="Selection">
                                    <Setter Property="ContentTemplate" Value="{StaticResource SelectionIssueTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IssueType}" Value="SelectionInImage">
                                    <Setter Property="ContentTemplate" Value="{StaticResource SelectionInImageIssueTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IssueType}" Value="ImageSelection">
                                    <Setter Property="ContentTemplate" Value="{StaticResource ImageSelectionIssueTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IssueType}" Value="Order">
                                    <Setter Property="ContentTemplate" Value="{StaticResource OrderIssueTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IssueType}" Value="Placement">
                                    <Setter Property="ContentTemplate" Value="{StaticResource PlacementIssueTemplate}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
                <!-- Issue additional details -->
                <ContentControl Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" Content="{Binding}" HorizontalAlignment="Stretch" Focusable="False" Visibility="{Binding IsIssueAdditionalDetailsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IssueType}" Value="SelectionInImage">
                                    <Setter Property="ContentTemplate" Value="{StaticResource SelectionInImageIssueAdditionalTemplate}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IssueType}" Value="Placement">
                                    <Setter Property="ContentTemplate" Value="{StaticResource PlacementIssueAdditionalTemplate}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
                <!-- Correct answer points, distribution channel and region -->
                <Grid Grid.Row="3" Grid.ColumnSpan="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="50" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <!-- Correct answer points -->
                    <Label Style="{DynamicResource SmallTitleStyle}" Content="{DynamicResource CorrectAnswerPointsTitle}" />
                    <TextBox Grid.Row="1" Style="{DynamicResource TextBoxStyle}" Behaviors:TextBoxBehavior.IsUInt32="True" Text="{Binding CorrectAnswerPoints, UpdateSourceTrigger=Explicit, Converter={StaticResource UInt32ToStringConverter}}" />
                    <!-- Distribution channel and region -->
                    <DockPanel Grid.Column="2">
                        <Label DockPanel.Dock="Left" Style="{DynamicResource SmallTitleStyle}" Content="{DynamicResource IssueSectionsTitle}" />
                        <Label DockPanel.Dock="Right" Style="{DynamicResource ErrorLabelStyle}" Visibility="{Binding IsDistributionChannelOrRegionError, Converter={StaticResource BoolToVisibilityConverter}}" Content="{DynamicResource ErrorIssueSectionTitle}" />
                    </DockPanel>
                    <!-- Distribution Channels -->
                    <StackPanel Grid.Column="2" Grid.Row="1" Orientation="Horizontal">
                        <Label Style="{DynamicResource LabelStyle}" Content="{DynamicResource DistributionChannelTitle}" />
                        <Label Style="{DynamicResource LabelStyle}" Content=":   "/>
                        <CheckBox Style="{DynamicResource CheckBoxStyle}" IsChecked="{Binding IsKADitributionChannel}" />
                        <Label Style="{DynamicResource LabelStyle}" Content="KA  " />
                        <CheckBox Style="{DynamicResource CheckBoxStyle}" IsChecked="{Binding IsOnTradeDitributionChannel}" />
                        <Label Style="{DynamicResource LabelStyle}" Content="ON-trade  " />
                        <CheckBox Style="{DynamicResource CheckBoxStyle}" IsChecked="{Binding IsOffTradeDitributionChannel}" />
                        <Label Style="{DynamicResource LabelStyle}" Content="OFF-trade" />
                    </StackPanel>
                    <!-- Regions -->
                    <StackPanel Grid.Column="2" Grid.Row="2" Orientation="Horizontal">
                        <Label Style="{DynamicResource LabelStyle}" Content="{DynamicResource RegionTitle}" />
                        <Label Style="{DynamicResource LabelStyle}" Content=":   "/>
                        <CheckBox Style="{DynamicResource CheckBoxStyle}" IsChecked="{Binding IsWestUkraine}" />
                        <Label Style="{DynamicResource LabelStyle}" Content="{DynamicResource WestUkraineTitle}" />
                        <Label Style="{DynamicResource LabelStyle}" Content="  "/>
                        <CheckBox Style="{DynamicResource CheckBoxStyle}" IsChecked="{Binding IsEastUkraine}" />
                        <Label Style="{DynamicResource LabelStyle}" Content="{DynamicResource EastUkraineTitle}" />
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
        <!-- Interface buttons -->
        <Grid Grid.Row="2" Grid.RowSpan="2" Style="{DynamicResource BottomPanelStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal">
                <Button Style="{DynamicResource ShortBottomButtonStyle}" Content="{DynamicResource PrevButtonTitle}" Command="{Binding BackCommand}" />
                <Controls:DropDownButton Style="{DynamicResource CreateButtonStyle}" Content="{DynamicResource CreateButtonTitle}">
                    <Controls:DropDownButton.DropDown>
                        <ContextMenu>
                            <MenuItem Header="{DynamicResource SelectionIssueTitle}" Command="{Binding CreateSelectionIssueCommand}" />
                            <MenuItem Header="{DynamicResource SelectionInImageIssueTitle}" Command="{Binding CreateSelectionInImageIssueCommand}" />
                            <MenuItem Header="{DynamicResource PlacementIssueTitle}" Command="{Binding CreatePlacementIssueCommand}" />
                            <MenuItem Header="{DynamicResource OrderIssueTitle}" Command="{Binding CreateOrderIssueCommand}" />
                            <MenuItem Header="{DynamicResource ImageSelectionIssueTitle}" Command="{Binding CreateImageSelectionIssueCommand}" />
                        </ContextMenu>
                    </Controls:DropDownButton.DropDown>
                </Controls:DropDownButton>
                <Button Style="{DynamicResource ShortBottomButtonStyle}" Content="{DynamicResource DeleteButtonTitle}" IsEnabled="{Binding IsIssueSelected}" Command="{Binding DeleteIssueCommand}" />
                <Button Style="{DynamicResource ShortBottomButtonStyle}" Content="{DynamicResource NextButtonTitle}" Command="{Binding NextCommand}" />
            </StackPanel>

            <StackPanel Grid.Column="1" Style="{DynamicResource HorizontalRightStackPanelStyle}">
                <Button Style="{DynamicResource BottomButtonStyle}" Content="{DynamicResource SettingsButtonTitle}" Command="{Binding SettingsCommand}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Page}}}" />
                <Button Style="{DynamicResource BottomButtonStyle}" Content="{DynamicResource SaveButtonTitle}" Command="{Binding SaveCommand}" />
            </StackPanel>
        </Grid>
    </Grid>
</Page>
